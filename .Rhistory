co_app[4,3] <- table(desc_dat$construction, desc_dat$conflict)[2,2]
colnames(co_app) <- c("Commission", "Monitoring",  "Conflict")
rownames(co_app) <- c("Pollution", "Shipping", "Fish", "Construction")
sjPlot::tab_df(co_app, show.rownames = T, title = "Design Principles by Issue Area", file = "ModelOutput/tables/co-appearance_table.doc")
# latex(co_app, file="", caption = "Design Principles by Issue Area", booktabs = T)
t.test(desc_dat$symmetry[desc_dat$commission == 1], desc_dat$symmetry[desc_dat$monitoring == 1], var.equal = F)
t.test(desc_dat$symmetry[desc_dat$commission == 1], desc_dat$symmetry[desc_dat$conflict == 1], var.equal = F)
t.test(desc_dat$symmetry[desc_dat$conflict == 1], desc_dat$symmetry[desc_dat$monitoring == 0], var.equal = F)
## III. standard summary table
library(summarytools)
sum_dat <- dyadicdat[dyadicdat$year >= 1980 | dyadicdat$year == 0,] %>% ungroup() %>%
dplyr::select(treaty_yes, conflict, monitoring, commission, agr_cum, conflict_cum, monitoring_cum, commission_cum, pollution, shipping, fish, construction, bi_lingue, symmetry)
sum_tab <- summarytools::descr(sum_dat, transpose = T, stats = c("n.valid", "mean", "sd", "min", "med", "max"), order = "p")
rownames(sum_tab) <- c("Agreement (yes)","Conflict Resolution (yes)",  "Monitoring (yes)", "Commission (yes)",  "Prior Agreements", "Prior Conflict Resolution", "Prior Monitoring",
"Prior Commission", "Pollution (yes)", "Shipping (yes)", "Fish (yes)", "Construction (yes)", "Bi-lingue (yes)", "Symmetry")
sum_tab <- round(sum_tab, 2)
sum_tab <- cbind(sum_tab, c(rep("no", 4), rep("yes", 4), rep("no", 6)))
colnames(sum_tab)[7] <- "Time-varying"
sjPlot::tab_df(sum_tab, show.rownames = T)
sum_dat
#### Trajectories of Institutional Design: Intergovernmental Cooperation in Federal Systems
### Authors: Simon Montfort, Manuel Fischer, James Hollway, Nicolas Jager
## Script compiled by Simon Montfort
# R.version
# platform       x86_64-apple-darwin17.0
# arch           x86_64
# os             darwin17.0
# system         x86_64, darwin17.0
# status
# major          4
# minor          0.4
# year           2021
# month          02
# day            15
# svn rev        80002
# language       R
# version.string R version 4.0.4 (2021-02-15)
# nickname       Lost Library Book
######################################
### Load packages
######################################
rm(list = ls())
library("dplyr")
library("ggplot2")
library("summarytools")
library("survival")
library("survminer")
library("tidyr")
library("igraph")
library("ggrepel")
library("Hmisc")
library("sandwich")
library("broom")
library("texreg")
library("scales")
library("stargazer")
library("wordreg")
######################################
# description of code
######################################
# The code proceeds in steps:
# (1) loading treaty data and subsetting to bilaterals
# (2) definition of risk set to contiguity over land
# (3) variables and covariates
# (4) descriptives
# (5) analysis
# (6) robustness checks
######################################
# (1) treaty design data
######################################
# change directory here to replicate
setwd("/Users/simon/Documents/repo/swiss-water-agreement-design")
load("ModelInput/dyadicdat_2.RData")
# subset to bilateral agreements
dyadicdat <- dyadicdat %>% filter(bilateral == 1)
# subset to those issues included
dyadicdat <- dyadicdat %>% filter(pollution == 1 | fish == 1 | shipping == 1 | construction == 1 )
##########
# (2) risk set
##########
# risk set rivers
load("ModelInput/risk_set.RData")
# join datasets
dyadicdat <- left_join(dyads, dyadicdat %>% dplyr::select(-canton1, -canton2), by = c("cantons" = "cantons"))
# for those cantons which did not experience an event at the end of the study time, i.e. empty risk sets should have the end of the study period in the relevant time variable
dyadicdat$time[is.na(dyadicdat$time)] <- as.numeric(as.Date("2020-01-01")) # in numeric format, 18262 is the end of the study period, this is lower than
# replace NAs of variables such as agreement, conflict, monitoring, commission with zero because the variables of these booleans are not present
dyadicdat[is.na(dyadicdat)] <- 0
############
# (3) variables
############
# numbers in the data:
length(unique(dyadicdat$ID_SM[dyadicdat$year >= 1980])) # number of agreements
# nrow(dyadicdat[dyadicdat$year >= 1980 | dyadicdat$year == "0",]) # number of observations
length(unique(dyadicdat$ID_SM[dyadicdat$commission == 1 & dyadicdat$year >= 1980])) # number of commissions
length(unique(dyadicdat$ID_SM[dyadicdat$conflict == 1 & dyadicdat$year >= 1980])) # number of conflict
length(unique(dyadicdat$ID_SM[dyadicdat$monitoring == 1 & dyadicdat$year >= 1980])) # number of conflict
nrow(dyadicdat[dyadicdat$year >= 1980 | dyadicdat$year == "0",]) # number of observations
#### Trajectories of Institutional Design: Intergovernmental Cooperation in Federal Systems
### Authors: Simon Montfort, Manuel Fischer, James Hollway, Nicolas Jager
## Script compiled by Simon Montfort
# R.version
# platform       x86_64-apple-darwin17.0
# arch           x86_64
# os             darwin17.0
# system         x86_64, darwin17.0
# status
# major          4
# minor          0.4
# year           2021
# month          02
# day            15
# svn rev        80002
# language       R
# version.string R version 4.0.4 (2021-02-15)
# nickname       Lost Library Book
######################################
### Load packages
######################################
rm(list = ls())
library("dplyr")
library("ggplot2")
library("summarytools")
library("survival")
library("survminer")
library("tidyr")
library("igraph")
library("ggrepel")
library("Hmisc")
library("sandwich")
library("broom")
library("texreg")
library("scales")
library("stargazer")
library("wordreg")
######################################
# description of code
######################################
# The code proceeds in steps:
# (1) loading treaty data and subsetting to bilaterals
# (2) definition of risk set to contiguity over land
# (3) variables and covariates
# (4) descriptives
# (5) analysis
# (6) robustness checks
######################################
# (1) treaty design data
######################################
# change directory here to replicate
setwd("/Users/simon/Documents/repo/swiss-water-agreement-design")
load("ModelInput/dyadicdat_2.RData")
# subset to bilateral agreements
dyadicdat <- dyadicdat %>% filter(bilateral == 1)
# subset to those issues included
dyadicdat <- dyadicdat %>% filter(pollution == 1 | fish == 1 | shipping == 1 | construction == 1 )
##########
# (2) risk set
##########
# risk set rivers
load("ModelInput/risk_set.RData")
# join datasets
dyadicdat <- left_join(dyads, dyadicdat %>% dplyr::select(-canton1, -canton2), by = c("cantons" = "cantons"))
# for those cantons which did not experience an event at the end of the study time, i.e. empty risk sets should have the end of the study period in the relevant time variable
dyadicdat$time[is.na(dyadicdat$time)] <- as.numeric(as.Date("2020-01-01")) # in numeric format, 18262 is the end of the study period, this is lower than
# replace NAs of variables such as agreement, conflict, monitoring, commission with zero because the variables of these booleans are not present
dyadicdat[is.na(dyadicdat)] <- 0
############
# (3) variables
############
# I. sequencing
dyadicdat <- dyadicdat %>%
group_by(cantons) %>%
arrange(cantons, time) %>%
# cumulative number of prior agreements
mutate(agr_cum = row_number() -1,
conflict_cum = cumsum(conflict) -1,
monitoring_cum = cumsum(monitoring) -1,
commission_cum = cumsum(commission) -1) %>%
mutate(agr_cum = ifelse(agr_cum == -1, agr_cum +1, agr_cum),
conflict_cum = ifelse(conflict_cum == -1, conflict_cum +1, conflict_cum),
monitoring_cum = ifelse( monitoring_cum == -1, monitoring_cum +1, monitoring_cum),
commission_cum = ifelse(commission_cum == -1, commission_cum +1, commission_cum)) %>%
# at least one prior agreement
mutate(agr_one = ifelse(agr_cum >= 1, 1, 0),
conflict_one = ifelse(conflict_cum >= 1, 1, 0),
monitoring_one = ifelse(monitoring_cum >= 1, 1, 0),
commission_one = ifelse(commission_cum >= 1, 1, 0)) %>%
# square root of the cumulative number of prior agreements
mutate(agreement_sqrt = sqrt(agr_cum),
conflict_sqrt = sqrt(conflict_cum),
monitoring_sqrt = sqrt(monitoring_cum),
commission_sqrt =sqrt(commission_cum))
# II. any mechanisms
dyadicdat <- dyadicdat %>%
mutate(any_mech_yes = ifelse(commission == 1 | monitoring == 1 | conflict == 1, 1, 0))
## look at structure of the data to check that cummulative sums have been calculated correctly
dyadicdat %>% group_by(cantons) %>%  arrange(cantons, time) %>% mutate(id = cur_group_id()) %>%
dplyr::select(id, cantons, time, enforcement, monitoring, conflict, commission_cum, monitoring_cum, conflict_cum, agr_cum) %>% as.data.frame()
# add dyad id to cluster s.e. later for modelling
dyadicdat <- dyadicdat %>% group_by(cantons) %>%  arrange(cantons, time) %>% mutate(dyad_id = cur_group_id())
## III. upstream/downstream operationalisation
load("ModelInput/US_DS_matrix_polygons_within_2.RData")
for (i in 1:nrow(dyadicdat)){
dyadicdat$drain_1_to_2[i] <- mat[dyadicdat$canton1[i] == rownames(mat), dyadicdat$canton2[i] == colnames(mat)]
dyadicdat$drain_2_to_1[i] <- mat[dyadicdat$canton2[i] == rownames(mat), dyadicdat$canton1[i] == colnames(mat)]
}
# IV. Water Symmetry based on trade interdependence by Crescenzi but adapted to fit water interdependence, p.30
dyadicdat$total_wat <- (dyadicdat$drain_1_to_2 + dyadicdat$drain_2_to_1)
dyadicdat$share_drain_1 <- dyadicdat$drain_1_to_2/dyadicdat$total_wat
dyadicdat$share_drain_2 <- dyadicdat$drain_2_to_1/dyadicdat$total_wat
dyadicdat$symmetry <- 1 - abs(dyadicdat$share_drain_1 - dyadicdat$share_drain_2)
# V. language
load("ModelInput/lang.RData")
dyadicdat <- left_join(dyadicdat, lang, by = c("dyad_id"))
# adapt risk set because cantons do not cooperate when no water flows from one to the other
dyadicdat <- dyadicdat[!is.nan(dyadicdat$symmetry),]
# number of cantons in the risk set:
length(unique(dyadicdat$cantons))
# number of repeated events:
sum(duplicated(dyadicdat$cantons[dyadicdat$treaty_yes == 1 & dyadicdat$year >= 1980]))
#################
# (4) descriptives
#################
## for descriptives, subset to those dyads that experienced an agreement after 1980 or did not experience an agreement at all
desc_dat <- dyadicdat[dyadicdat$year >= 1980 & dyadicdat$year != 0,]
# I. correlation between design principles
chi <- as.data.frame(matrix(nrow = 6, ncol = 3))
chi[1,2] <- round(chisq.test(table(desc_dat$conflict, desc_dat$monitoring))$statistic, 3)
chi[2,2] <- paste0( "(", round(chisq.test(table(desc_dat$conflict, desc_dat$monitoring))$p.value, 3), ")")
chi[1,3] <- round(chisq.test(table(desc_dat$conflict, desc_dat$commission))$statistic, 3)
chi[2,3] <- paste0( "(", round(chisq.test(table(desc_dat$conflict, desc_dat$commission))$p.value, 3), ")")
chi[3,3] <- round(chisq.test(table(desc_dat$monitoring, desc_dat$commission))$statistic, 3)
chi[4,3] <- paste0( "(", round(chisq.test(table(desc_dat$monitoring, desc_dat$commission))$p.value, 3), ")")
chi[is.na(chi)] <- "-"
colnames(chi) <- c("Conflict", "Monitoring",  "Commission")
rownames(chi) <- c("Conflict", "", "Monitoring", " ",  "Commission", "  ")
# sjPlot::tab_df(chi, show.rownames = T, footnote = "P-value in parentheses", show.footnote = T)
latex(chi, file="", caption = "Chi-Squared Correlation between Design Principles")
# II. simple descriptives of co-appearance
co_app <- as.data.frame(matrix(nrow = 4, ncol = 3))
co_app[1,1] <- table(desc_dat$pollution, desc_dat$commission)[2,2]
co_app[1,2] <- table(desc_dat$pollution, desc_dat$monitoring)[2,2]
co_app[1,3] <- table(desc_dat$pollution, desc_dat$conflict)[2,2]
co_app[2,1] <- table(desc_dat$shipping, desc_dat$commission)[2,2]
co_app[2,2] <- table(desc_dat$shipping, desc_dat$monitoring)[2,2]
co_app[2,3] <- table(desc_dat$shipping, desc_dat$conflict)[2,2]
co_app[3,1] <- table(desc_dat$fish, desc_dat$commission)[2,2]
co_app[3,2] <- table(desc_dat$fish, desc_dat$monitoring)[2,2]
co_app[3,3] <- table(desc_dat$fish, desc_dat$conflict)[2,2]
co_app[4,1] <- table(desc_dat$construction, desc_dat$commission)[2,2]
co_app[4,2] <- table(desc_dat$construction, desc_dat$monitoring)[2,2]
co_app[4,3] <- table(desc_dat$construction, desc_dat$conflict)[2,2]
colnames(co_app) <- c("Commission", "Monitoring",  "Conflict")
rownames(co_app) <- c("Pollution", "Shipping", "Fish", "Construction")
sjPlot::tab_df(co_app, show.rownames = T, title = "Design Principles by Issue Area", file = "ModelOutput/tables/co-appearance_table.doc")
# latex(co_app, file="", caption = "Design Principles by Issue Area", booktabs = T)
t.test(desc_dat$symmetry[desc_dat$commission == 1], desc_dat$symmetry[desc_dat$monitoring == 1], var.equal = F)
t.test(desc_dat$symmetry[desc_dat$commission == 1], desc_dat$symmetry[desc_dat$conflict == 1], var.equal = F)
t.test(desc_dat$symmetry[desc_dat$conflict == 1], desc_dat$symmetry[desc_dat$monitoring == 0], var.equal = F)
## III. standard summary table
library(summarytools)
sum_dat <- dyadicdat[dyadicdat$year >= 1980 | dyadicdat$year == 0,] %>%
ungroup() %>%
dplyr::select(treaty_yes, conflict, monitoring, commission, agr_cum, conflict_cum, monitoring_cum, commission_cum, pollution, shipping, fish, construction, bi_lingue, symmetry)
sum_tab <- summarytools::descr(sum_dat, transpose = T, stats = c("n.valid", "mean", "sd", "min", "med", "max"), order = "p")
rownames(sum_tab) <- c("Agreement (yes)","Conflict Resolution (yes)",  "Monitoring (yes)", "Commission (yes)",  "Prior Agreements", "Prior Conflict Resolution", "Prior Monitoring",
"Prior Commission", "Pollution (yes)", "Shipping (yes)", "Fish (yes)", "Construction (yes)", "Bi-lingue (yes)", "Symmetry")
sum_tab <- round(sum_tab, 2)
sum_tab <- cbind(sum_tab, c(rep("no", 4), rep("yes", 4), rep("no", 6)))
colnames(sum_tab)[7] <- "Time-varying"
sjPlot::tab_df(sum_tab, show.rownames = T)
# numbers in the data:
length(unique(dyadicdat$ID_SM[dyadicdat$year >= 1980])) # number of agreements
nrow(dyadicdat[dyadicdat$year >= 1980 | dyadicdat$year == "0",]) # number of observations
length(unique(dyadicdat$ID_SM[dyadicdat$commission == 1 & dyadicdat$year >= 1980])) # number of commissions
length(unique(dyadicdat$ID_SM[dyadicdat$conflict == 1 & dyadicdat$year >= 1980])) # number of conflict
length(unique(dyadicdat$ID_SM[dyadicdat$monitoring == 1 & dyadicdat$year >= 1980])) # number of conflict
dyadicdat %>%
duplicated(ID_SM)# number of observations
dyadicdat[duplicated(ID_SM),] # number of observations
dyadicdat[duplicated(ID_SM),] # number of observations
dyadicdat[duplicated(dyadicdat$ID_SM),] # number of observations
dyadicdat
dyadicdat[duplicated(dyadicdat$cantons),] # number of observations
unique(dyadicdat$cantons[duplicated(dyadicdat$cantons),] ) #
unique(dyadicdat$cantons[duplicated(dyadicdat$cantons)]) #
length(unique(dyadicdat$cantons[duplicated(dyadicdat$cantons)])) # how many cantons sign two or more agreements
length(unique(dyadicdat$cantons[duplicated(dyadicdat$cantons)])) # how many dyads sign two or more agreements
nrow(dyadicdat[dyadicdat$year >= 1980 | dyadicdat$year == "0",]) # number of observations
# numbers in the data:
length(unique(dyadicdat$ID_SM[dyadicdat$year >= 1980])) # number of agreements
42+19
42-19
length(unique(dyadicdat$cantons[duplicated(dyadicdat$cantons)])) # how many dyads sign two or more agreements
length(unique(dyadicdat$cantons[duplicated(dyadicdat$cantons)])) # how many dyads sign two or more agreements
length(unique(dyadicdat$cantons[!duplicated(dyadicdat$cantons)])) # how many dyads sign two or more agreements
50-19
length(unique(dyadicdat$cantons)) # risk set
length(unique(dyadicdat$cantons)) # risk set
length(unique(dyadicdat$cantons[duplicated(dyadicdat$cantons)])) # how many dyads sign two or more agreements
rm(list = ls())
# packages
library(readxl)
library(dplyr)
library(readr)
library(irr)
dist_2 <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/in_depth_qualitative_XGBoost_dist_200_2.xlsx")
econ_2 <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/in_depth_qualitative_XGBoost_econ_200_2.xlsx")
inst_2 <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/in_depth_qualitative_XGBoost_inst_200_2.xlsx")
mult_2 <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/in_depth_qualitative_XGBoost_mult_200_2.xlsx")
dist_2 <- dist_2 %>% slice(1:100)
econ_2 <- econ_2 %>% slice(1:100)
inst_2 <- inst_2 %>% slice(1:100)
mult_2 <- mult_2 %>% slice(1:100)
all <- left_join(dist_2, econ_2, by = c("Article.Title", "Authors"))
all <- left_join(all, inst_2, by = c("Article.Title", "Authors"))
all <- left_join(all, mult_2, by = c("Article.Title", "Authors"))
length(unique(c(dist_2$Article.Title, econ_2$Article.Title, inst_2$Article.Title, mult_2$Article.Title))) # no of articles that we code in total
length(unique(c( inst_2$Article.Title, mult_2$Article.Title))) # no of articles in batch on inst_cap and mult_gov
mult_sm <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Reliability Checks/Files Round 2/Excel Files Reliability Checks Simon /in_depth_qualitative_XGBoost_mult_reliability_1_marked.xlsx")
inst_sm <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Reliability Checks/Files Round 2/Excel Files Reliability Checks Simon /in_depth_qualitative_XGBoost_inst_reliability_1.xlsx")
colnames(mult_sm) <- mult_sm[1,]
colnames(inst_sm) <- inst_sm[1,]
mult_sm <- mult_sm[-1,]
inst_sm <- inst_sm[-1,]
mult_mw <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Finished Qualitative Analysis/Coding Multi-Level Governance Marco-3.xlsx")
inst_mw <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Finished Qualitative Analysis/Coding Institutional Capacity Marco-3.xlsx")
colnames(mult_mw) <- mult_mw[1,]
colnames(inst_mw) <- inst_mw[1,]
mult_mw <- mult_mw[-1,]
inst_mw <- inst_mw[-1,]
nrow(inst_mw)
nrow(mult_mw) # includes more, i.e. 200 articles of which 100 are coded
mult_mw <- mult_mw[1:100,]
# check that the colnames are the same
sum(colnames(inst_mw) == colnames(inst_mw)) == ncol(inst_mw) # should be TRUE
sum(colnames(mult_sm) == colnames(inst_sm)) == ncol(inst_sm) # should be TRUE
ncol(mult_sm) == ncol(inst_sm) # should be TRUE
ncol(mult_mw) == ncol(inst_mw) # should be TRUE
sm <- bind_rows(mult_sm, inst_sm)
sm_unique <- sm %>% group_by(Article.Title, Authors) %>% slice(1)
sm_unique
mw <- bind_rows(mult_mw, inst_mw)
mw_unique <- mw %>% group_by(Article.Title, Authors) %>% slice(1)
mw_unique
# write excel with double codings into a file so that marco can check
double_codings <-  mw %>%
group_by(Article.Title, Authors) %>%
mutate(n= n()) %>%
filter(n == 2) %>%
dplyr::select(regulatory_agency_coordination, science_policy_integration, communication_and_framing,
participation_and_deliberation, policy_design, bottom_up_processes) %>%
mutate_at(vars(regulatory_agency_coordination, science_policy_integration, communication_and_framing,
participation_and_deliberation, policy_design, bottom_up_processes), n_distinct)
double_codings
length(unique(c( inst_2$Article.Title, mult_2$Article.Title))) # no of articles in batch on inst_cap and mult_gov
mult_sm <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Reliability Checks/Files Round 2/Excel Files Reliability Checks Simon /in_depth_qualitative_XGBoost_mult_reliability_1_marked.xlsx")
inst_sm <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Reliability Checks/Files Round 2/Excel Files Reliability Checks Simon /in_depth_qualitative_XGBoost_inst_reliability_1.xlsx")
colnames(mult_sm) <- mult_sm[1,]
colnames(inst_sm) <- inst_sm[1,]
mult_sm <- mult_sm[-1,]
inst_sm <- inst_sm[-1,]
mult_mw <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/round 3/Coding Multi-Level Governance Marco-3.xlsx")
inst_mw <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/round 3/Coding Institutional Capacity Marco-3.xlsx.xlsx")
colnames(mult_mw) <- mult_mw[1,]
colnames(inst_mw) <- inst_mw[1,]
mult_mw <- mult_mw[-1,]
inst_mw <- inst_mw[-1,]
nrow(inst_mw)
nrow(mult_mw) # includes more, i.e. 200 articles of which 100 are coded
inst_mw <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/round 3/Coding Institutional Capacity Marco-3.xlsx")
colnames(mult_mw) <- mult_mw[1,]
colnames(inst_mw) <- inst_mw[1,]
mult_mw <- mult_mw[-1,]
inst_mw <- inst_mw[-1,]
nrow(inst_mw)
nrow(mult_mw) # includes more, i.e. 200 articles of which 100 are coded
mult_mw <- mult_mw[1:100,]
# check that the colnames are the same
sum(colnames(inst_mw) == colnames(inst_mw)) == ncol(inst_mw) # should be TRUE
sum(colnames(mult_sm) == colnames(inst_sm)) == ncol(inst_sm) # should be TRUE
ncol(mult_sm) == ncol(inst_sm) # should be TRUE
ncol(mult_mw) == ncol(inst_mw) # should be TRUE
sm <- bind_rows(mult_sm, inst_sm)
sm_unique <- sm %>% group_by(Article.Title, Authors) %>% slice(1)
sm_unique
mw <- bind_rows(mult_mw, inst_mw)
mw_unique <- mw %>% group_by(Article.Title, Authors) %>% slice(1)
mw_unique
# write excel with double codings into a file so that marco can check
double_codings <-  mw %>%
group_by(Article.Title, Authors) %>%
mutate(n= n()) %>%
filter(n == 2) %>%
dplyr::select(regulatory_agency_coordination, science_policy_integration, communication_and_framing,
participation_and_deliberation, policy_design, bottom_up_processes) %>%
mutate_at(vars(regulatory_agency_coordination, science_policy_integration, communication_and_framing,
participation_and_deliberation, policy_design, bottom_up_processes), n_distinct)
double_codings
nrow(sm)
both <- left_join(sm_unique, mw_unique, by = c("Article.Title", "Authors"))
nrow(both)
mw$regulatory_agency_coordination.economic_cost
sm$regulatory_agency_coordination.economic_cost
both$regulatory_agency_coordination.economic_cost.x
both$regulatory_agency_coordination.economic_cost.y
sm_unique
mw$regulatory_agency_coordination.economic_cost
sm$regulatory_agency_coordination.economic_cost
both$regulatory_agency_coordination.economic_cost.x
both$regulatory_agency_coordination.economic_cost.y
both[is.na(both$regulatory_agency_coordination.distributional_dynamics.x),]
kappa2(cbind(c(as.numeric(both$excluded.x)), c(as.numeric(both$excluded.y))))
both$regulatory_agency_coordination.x <- as.numeric(ifelse(is.na(both$regulatory_agency_coordination.x), 0, 1))
both$regulatory_agency_coordination.y <- as.numeric(ifelse(is.na(both$regulatory_agency_coordination.y), 0, 1))
both$science_policy_integration.x <- as.numeric(ifelse(is.na(both$science_policy_integration.x), 0, 1))
both$science_policy_integration.y <- as.numeric(ifelse(is.na(both$science_policy_integration.y), 0, 1))
both$communication_and_framing.x <- as.numeric(ifelse(is.na(both$communication_and_framing.x), 0, 1))
both$communication_and_framing.y <- as.numeric(ifelse(is.na(both$communication_and_framing.y), 0, 1))
both$participation_and_deliberation.x <- as.numeric(ifelse(is.na(both$participation_and_deliberation.x), 0, 1))
both$participation_and_deliberation.y <- as.numeric(ifelse(is.na(both$participation_and_deliberation.y), 0, 1))
both$policy_design.x <- as.numeric(ifelse(is.na(both$policy_design.x), 0, 1))
both$policy_design.y <- as.numeric(ifelse(is.na(both$policy_design.y), 0, 1))
both$bottom_up_processes.x <- as.numeric(ifelse(is.na(both$bottom_up_processes.x), 0, 1))
both$bottom_up_processes.y <- as.numeric(ifelse(is.na(both$bottom_up_processes.y), 0, 1))
kappa2(cbind(both$regulatory_agency_coordination.x, both$regulatory_agency_coordination.y))
kappa2(cbind(both$science_policy_integration.x, both$science_policy_integration.y))
kappa2(cbind(both$communication_and_framing.x, both$communication_and_framing.y))
kappa2(cbind(both$participation_and_deliberation.x, both$participation_and_deliberation.y))
kappa2(cbind(both$policy_design.x, both$policy_design.y))
kappa2(cbind(both$bottom_up_processes.x, both$bottom_up_processes.y))
both$policy_design.x
both$policy_design.y
both$bottom_up_processes.x
both$bottom_up_processes.y
kappa2(cbind(both$bottom_up_processes.x, both$bottom_up_processes.y))
kappa2(cbind(both$policy_design.x, both$policy_design.y))
# articles for which the codings are not the same and the score is below acceptable
both$Article.Title[both$regulatory_agency_coordination.x != both$regulatory_agency_coordination.y]
both$Authors[both$science_policy_integration.x != both$science_policy_integration.y]
both$Article.Title[both$communication_and_framing.x != both$communication_and_framing.y]
both$Article.Title[both$participation_and_deliberation.x != both$participation_and_deliberation.y]
both$Authors[both$science_policy_integration.x != both$science_policy_integration.y  & both$science_policy_integration.y == 1]
kappa2(cbind(both$regulatory_agency_coordination.x, both$regulatory_agency_coordination.y))
# articles for which the codings are not the same and the score is below acceptable
both$Article.Title[both$regulatory_agency_coordination.x != both$regulatory_agency_coordination.y]
both$Authors[both$regulatory_agency_coordination.x != both$regulatory_agency_coordination.y]
both$Authors[both$regulatory_agency_coordination.x != both$regulatory_agency_coordination.y]
mult_sm <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Reliability Checks/Files Round 2/Excel Files Reliability Checks Simon /in_depth_qualitative_XGBoost_mult_reliability_1_marked.xlsx")
inst_sm <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Reliability Checks/Files Round 2/Excel Files Reliability Checks Simon /in_depth_qualitative_XGBoost_inst_reliability_1.xlsx")
colnames(mult_sm) <- mult_sm[1,]
colnames(inst_sm) <- inst_sm[1,]
mult_sm <- mult_sm[-1,]
inst_sm <- inst_sm[-1,]
mult_mw <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/round 3/Coding Multi-Level Governance Marco-3.xlsx")
inst_mw <- read_xlsx("/Volumes/Transcend/Uni/doktorat/Proposal_Seminar/Paper 1/qualitative reading full set/Excel Files for Qualitative Coding Full Set/round 3/Coding Institutional Capacity Marco-3.xlsx")
colnames(mult_mw) <- mult_mw[1,]
colnames(inst_mw) <- inst_mw[1,]
mult_mw <- mult_mw[-1,]
inst_mw <- inst_mw[-1,]
nrow(inst_mw)
nrow(mult_mw) # includes more, i.e. 200 articles of which 100 are coded
mult_mw <- mult_mw[1:100,]
# check that the colnames are the same
sum(colnames(inst_mw) == colnames(inst_mw)) == ncol(inst_mw) # should be TRUE
sum(colnames(mult_sm) == colnames(inst_sm)) == ncol(inst_sm) # should be TRUE
ncol(mult_sm) == ncol(inst_sm) # should be TRUE
ncol(mult_mw) == ncol(inst_mw) # should be TRUE
sm <- bind_rows(mult_sm, inst_sm)
sm_unique <- sm %>% group_by(Article.Title, Authors) %>% slice(1)
sm_unique
mw <- bind_rows(mult_mw, inst_mw)
mw_unique <- mw %>% group_by(Article.Title, Authors) %>% slice(1)
mw_unique
# write excel with double codings into a file so that marco can check
double_codings <-  mw %>%
group_by(Article.Title, Authors) %>%
mutate(n= n()) %>%
filter(n == 2) %>%
dplyr::select(regulatory_agency_coordination, science_policy_integration, communication_and_framing,
participation_and_deliberation, policy_design, bottom_up_processes) %>%
mutate_at(vars(regulatory_agency_coordination, science_policy_integration, communication_and_framing,
participation_and_deliberation, policy_design, bottom_up_processes), n_distinct)
nrow(sm)
both <- left_join(sm_unique, mw_unique, by = c("Article.Title", "Authors"))
nrow(both)
mw$regulatory_agency_coordination.economic_cost
sm$regulatory_agency_coordination.economic_cost
both$regulatory_agency_coordination.economic_cost.x
both$regulatory_agency_coordination.economic_cost.y
both[is.na(both$regulatory_agency_coordination.distributional_dynamics.x),]
kappa2(cbind(c(as.numeric(both$excluded.x)), c(as.numeric(both$excluded.y))))
both$regulatory_agency_coordination.x <- as.numeric(ifelse(is.na(both$regulatory_agency_coordination.x), 0, 1))
both$regulatory_agency_coordination.y <- as.numeric(ifelse(is.na(both$regulatory_agency_coordination.y), 0, 1))
both$science_policy_integration.x <- as.numeric(ifelse(is.na(both$science_policy_integration.x), 0, 1))
both$science_policy_integration.y <- as.numeric(ifelse(is.na(both$science_policy_integration.y), 0, 1))
both$communication_and_framing.x <- as.numeric(ifelse(is.na(both$communication_and_framing.x), 0, 1))
both$communication_and_framing.y <- as.numeric(ifelse(is.na(both$communication_and_framing.y), 0, 1))
both$participation_and_deliberation.x <- as.numeric(ifelse(is.na(both$participation_and_deliberation.x), 0, 1))
both$participation_and_deliberation.y <- as.numeric(ifelse(is.na(both$participation_and_deliberation.y), 0, 1))
both$policy_design.x <- as.numeric(ifelse(is.na(both$policy_design.x), 0, 1))
both$policy_design.y <- as.numeric(ifelse(is.na(both$policy_design.y), 0, 1))
both$bottom_up_processes.x <- as.numeric(ifelse(is.na(both$bottom_up_processes.x), 0, 1))
both$bottom_up_processes.y <- as.numeric(ifelse(is.na(both$bottom_up_processes.y), 0, 1))
kappa2(cbind(both$regulatory_agency_coordination.x, both$regulatory_agency_coordination.y))
kappa2(cbind(both$science_policy_integration.x, both$science_policy_integration.y))
kappa2(cbind(both$communication_and_framing.x, both$communication_and_framing.y))
kappa2(cbind(both$participation_and_deliberation.x, both$participation_and_deliberation.y))
both$Authors[both$science_policy_integration.x != both$science_policy_integration.y]
both$Authors[both$communication_and_framing.x != both$communication_and_framing.y]
both$Article.Title[both$participation_and_deliberation.x != both$participation_and_deliberation.y]
both$Authors[both$participation_and_deliberation.x != both$participation_and_deliberation.y]
